@startuml
class ParqueNatural{
- {static} instancia: ParqueNatural
- areas: List<AreaProtegida>
- visitantes: List<Visitante>
- boletosRegistrados: List<Boleto> 

-getInstancia(): ParqueNatural

+ registrarNuevaArea(int idArea, String nombre, int cantidadMaxima, String fauna, String flora, String ubicacion): AreaProtegida
+ nuevoBoletoEstudiantil(String DNI, Date fechaVisita, List<AreaProtegida> listadoIdAreas): Estudiantil
+ nuevoBoletoTemportadaBaja((String DNI, Date fechaVisita, List<AreaProtegida> listadoIdAreas): TemporadaBaja
+ nuevoBoletoTemporadaAlta((String DNI, Date fechaVisita, List<AreaProtegida> listadoIdAreas): TemporadaAlta
+ nuevoVisitante(int idVisitante, String nombre): Visitante
+ calcularPrecioFinal(int idCompra): double
+ emitirBoleto(String DNI, Date fechaVisita, List<AreaProtegida> listadoIdAreas): Boleto

- agregarVisitante(Visitante visitante): void
- agregarABoletosRegistrados(Boleto boleto): void
- agregarAreaProtegida(AreaProtegida areaProtegida): void

-buscarVisitante(int idVisitante): Visitante
-buscarBoleto(int idBoleto): Boleto
-generarInforme(List<Visitante> visitante, List<AreaProtegida> estadoArea): void
-areaDisponible(List<Boleto>, int idArea, Date fechaVisita): boolean
}

class Visitante{
-{static} contadorId: int
-idVisitante: int
-nombre: String
-DNI: String

+Registrarse(int idVisitante, String nombre): Visitante
+generarCompra(AreaProtegida area, int idVisitante): Compra
+pagar(Compra compra): void 
}

class Compra{
-{static} contadorId: int
-idCompra: int
-visitante: Visitante
-area: AreaProtegida
-estado: EstadoCompra
-precio: double
-boleto: Boleto

+nuevaCompra(int idVisitante, int idCompra, Boleto boleto, AreaProtegida area, EstadoCompra estado): compra
+calcularPrecio(Boleto boleto): double
}

class AreaProtegida{
-{static} contadorId: int
-idArea: int
-ubicacion: String
-nombre: String
-cantidadMaxima: int
-flora: String
-fauna: String

+CrearArea(int idArea, String nombre, int cantidadMaxima, String fauna, String flora, String ubicacion): AreaProtegida
+getCantidadMaximaArea(int idArea): int

}

abstract Boleto{
-{static} contadorId: int
#idBoleto: int
#precio: float
#cantArea: List<AreaProtegida>
#fechaVisita: Date
#estadoBoleto: EstadoBoleto

+Boleto(int idBoleto, float precio, List<AreaProtegida> cantArea, Date fechaVisita): Boleto
+{abstract} calcularPrecio() float

-estaVigente(Boleto boleto): boolean
}

class Estudiantil{
calcularPrecio(): float
}

class TemporadaBaja{
calcularPrecio(): float
}

class TemporadaAlta{
calcularPrecio(): float
}

Enum EstadoCompra{
PAGADO
NO_PAGADO
}

Enum EstadoBoleto{
VENCIDO
VIGENTE
}

Boleto <|-- Estudiantil
Boleto <|-- TemporadaBaja
Boleto <|-- TemporadaAlta

ParqueNatural "1" *-- "*" Visitante
ParqueNatural "1" *-- "*" Compra
ParqueNatural "1" *-- "*" Boleto
ParqueNatural "1" *-- "*" AreaProtegida

Visitante "1" o-- "*" Compra
Compra <-- EstadoCompra

Compra "1" o-- "1" Boleto
AreaProtegida "1" o-- "*" Boleto
Boleto <-- EstadoBoleto